# ============================================================================
# Promtail Configuration - Log Shipper to Loki
# ============================================================================

server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    timeout: 10s
    backoff_config:
      min_period: 100ms
      max_period: 10s
      max_retries: 10

scrape_configs:
  # ========================================
  # PostgreSQL Logs
  # ========================================
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          cluster: pg_ha_cluster
          __path__: /var/lib/docker/containers/*/*.log
    
    pipeline_stages:
      # Parse JSON logs from Docker
      - json:
          expressions:
            log: log
            stream: stream
            time: time
      
      # Extract PostgreSQL log fields
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<timezone>\w+) \[(?P<pid>\d+)\]: \[(?P<session>\d+-\d+)\] user=(?P<user>\w+),db=(?P<database>\w+),app=(?P<application>[\w\s]+),client=(?P<client>[\d\.]+) (?P<level>\w+):  (?P<message>.*)'
          source: log
      
      # Add labels from extracted fields
      - labels:
          level:
          database:
          user:
          application:
      
      # Parse timestamp
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000'
      
      # Output only the message
      - output:
          source: message
    
    relabel_configs:
      # Extract container name from path
      - source_labels: [__path__]
        regex: '/var/lib/docker/containers/[a-f0-9]+/(.*)\.log'
        target_label: container_name
      
      # Map container to PostgreSQL instance
      - source_labels: [container_name]
        regex: '.*pg-(\d+).*'
        replacement: 'pg-${1}'
        target_label: instance

  # ========================================
  # ProxySQL Logs
  # ========================================
  - job_name: proxysql
    static_configs:
      - targets:
          - localhost
        labels:
          job: proxysql
          cluster: pg_ha_cluster
          __path__: /var/lib/docker/containers/*proxysql*/*.log
    
    pipeline_stages:
      - json:
          expressions:
            log: log
            stream: stream
      
      # Extract ProxySQL log format
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?P<thread>\[\w+\]) (?P<level>\w+): (?P<message>.*)'
          source: log
      
      - labels:
          level:
          thread:
      
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05'
      
      - output:
          source: message

  # ========================================
  # System Logs (syslog, auth, etc.)
  # ========================================
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/syslog
    
    pipeline_stages:
      # Parse syslog format
      - regex:
          expression: '(?P<timestamp>\w+ \d+ \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<process>\S+)\[(?P<pid>\d+)\]: (?P<message>.*)'
      
      - labels:
          hostname:
          process:
      
      - output:
          source: message

  # ========================================
  # Docker Container Logs (all)
  # ========================================
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["cluster=pg_ha_cluster"]
    
    relabel_configs:
      # Container name
      - source_labels: [__meta_docker_container_name]
        regex: '/(.*)'
        target_label: container_name
      
      # Container labels
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: service
      
      - source_labels: [__meta_docker_container_label_com_docker_compose_project]
        target_label: project
      
      # Log path
      - source_labels: [__meta_docker_container_id]
        target_label: __path__
        replacement: /var/lib/docker/containers/$1/$1-json.log
    
    pipeline_stages:
      - json:
          expressions:
            log: log
            stream: stream
            time: time
      
      - timestamp:
          source: time
          format: RFC3339Nano
      
      - output:
          source: log

  # ========================================
  # Monitoring Stack Logs
  # ========================================
  - job_name: monitoring
    static_configs:
      - targets:
          - localhost
        labels:
          job: monitoring
          __path__: /var/lib/docker/containers/*/{prometheus,grafana,loki,tempo,mimir,alertmanager}*/*.log
    
    pipeline_stages:
      - json:
          expressions:
            log: log
            level: level
            msg: msg
            ts: ts
      
      - labels:
          level:
      
      - timestamp:
          source: ts
          format: RFC3339Nano
      
      - output:
          source: msg
