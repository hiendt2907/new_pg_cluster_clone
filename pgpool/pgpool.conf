#------------------------------------------------------------------------------
# CONNECTIONS
#------------------------------------------------------------------------------
listen_addresses = '*'
port = 5432
pcp_listen_addresses = '*'
pcp_port = 9898
socket_dir = '/var/run/pgpool'

#------------------------------------------------------------------------------
# BACKEND CONFIGURATION
#------------------------------------------------------------------------------
# Backend 0 - Primary (writes only)
backend_hostname0 = 'pg-1'
backend_port0 = 5432
backend_weight0 = 0              # Weight 0 = NO READ queries
backend_data_directory0 = '/var/lib/postgresql/data'
backend_flag0 = 'ALLOW_TO_FAILOVER'
backend_application_name0 = 'pg-1'

# Backend 1 - Standby (reads)
backend_hostname1 = 'pg-2'
backend_port1 = 5432
backend_weight1 = 1              # Equal weight for load balancing
backend_data_directory1 = '/var/lib/postgresql/data'
backend_flag1 = 'ALLOW_TO_FAILOVER'
backend_application_name1 = 'pg-2'

# Backend 2 - Standby (reads)
backend_hostname2 = 'pg-3'
backend_port2 = 5432
backend_weight2 = 1
backend_data_directory2 = '/var/lib/postgresql/data'
backend_flag2 = 'ALLOW_TO_FAILOVER'
backend_application_name2 = 'pg-3'

# Backend 3 - Standby (reads)
backend_hostname3 = 'pg-4'
backend_port3 = 5432
backend_weight3 = 1
backend_data_directory3 = '/var/lib/postgresql/data'
backend_flag3 = 'ALLOW_TO_FAILOVER'
backend_application_name3 = 'pg-4'

#------------------------------------------------------------------------------
# RUNNING MODE
#------------------------------------------------------------------------------
backend_clustering_mode = 'streaming_replication'
num_init_children = 100
max_pool = 4
listen_backlog_multiplier = 2
serialize_accept = off

#------------------------------------------------------------------------------
# LOAD BALANCING MODE
#------------------------------------------------------------------------------
load_balance_mode = on
# Use session-level load balancing to keep connection sticky
# This ensures DML queries go to the same backend throughout the session
statement_level_load_balance = on
ignore_leading_white_space = on

# Write/Read split
# With 'transaction', writes in explicit transactions go to primary
# Standalone writes may still be load balanced (application must use transactions)
disable_load_balance_on_write = 'transaction'
dml_adaptive_object_relationship_list = ''
black_function_list = 'nextval,setval,pg_catalog.nextval,pg_catalog.setval,currval,lastval'
white_function_list = ''
black_query_pattern_list = ''
white_query_pattern_list = ''

#------------------------------------------------------------------------------
# STREAMING REPLICATION MODE
#------------------------------------------------------------------------------
sr_check_period = 10
sr_check_user = 'repmgr'
sr_check_password = 'repmgrpass'
sr_check_database = 'postgres'
delay_threshold = 10485760  # 10MB in bytes

#------------------------------------------------------------------------------
# HEALTH CHECK
#------------------------------------------------------------------------------
health_check_period = 10
health_check_timeout = 5
health_check_user = 'repmgr'
health_check_password = 'repmgrpass'
health_check_database = 'postgres'
health_check_max_retries = 3
health_check_retry_delay = 1
connect_timeout = 10000

#------------------------------------------------------------------------------
# FAILOVER AND FAILBACK
#------------------------------------------------------------------------------
failover_on_backend_error = off
failover_command = '/usr/local/bin/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S'
failback_command = ''
failover_require_consensus = off
search_primary_node_timeout = 300

#------------------------------------------------------------------------------
# WATCHDOG (for pgpool-II HA)
# Temporarily disabled - will be enabled after basic functionality works
#------------------------------------------------------------------------------
use_watchdog = off

# This pgpool node
wd_hostname0 = ''                 # Will be set via environment variable
wd_port0 = 9000
wd_priority0 = 1                  # Will be set via environment variable

# Common watchdog settings
wd_authkey = 'pgpool_watchdog_auth'
wd_ipc_socket_dir = '/var/run/pgpool'
delegate_ip = ''                  # No VIP in Docker
if_up_cmd = ''
if_down_cmd = ''
arping_cmd = ''

# Watchdog heartbeat
wd_heartbeat_port0 = 9694
wd_heartbeat_keepalive0 = 2
wd_heartbeat_deadtime0 = 30

# Other pgpool monitoring
wd_monitoring_interfaces_list = ''
wd_lifecheck_method = 'heartbeat'
wd_interval = 10

# Virtual IP interface (disabled in Docker)
wd_escalation_command = ''
wd_de_escalation_command = ''

# Watchdog lifecycle
wd_life_point = 3
wd_lifecheck_query = 'SELECT 1'
wd_lifecheck_dbname = 'postgres'
wd_lifecheck_user = 'pgpool'
wd_lifecheck_password = ''

# Other watchdog nodes
other_pgpool_hostname0 = 'pgpool-2'
other_pgpool_port0 = 5432
other_wd_port0 = 9000

# Heartbeat destination
heartbeat_hostname0 = 'pgpool-1'
heartbeat_port0 = 9694
heartbeat_device0 = ''

#------------------------------------------------------------------------------
# CONNECTION POOL
#------------------------------------------------------------------------------
connection_cache = on
reset_query_list = 'ABORT; DISCARD ALL'

#------------------------------------------------------------------------------
# LOGGING
#------------------------------------------------------------------------------
log_destination = 'stderr'
log_line_prefix = '%t: pid %p: '
log_connections = off
log_disconnections = off
log_hostname = on
log_statement = off
log_per_node_statement = off
log_client_messages = off
log_standby_delay = 'if_over_threshold'

#------------------------------------------------------------------------------
# PCP (pgpool Control Protocol)
#------------------------------------------------------------------------------
pcp_socket_dir = '/var/run/pgpool'

#------------------------------------------------------------------------------
# MEMORY CACHE
#------------------------------------------------------------------------------
memory_cache_enabled = off

#------------------------------------------------------------------------------
# MISC
#------------------------------------------------------------------------------
relcache_expire = 0
relcache_size = 256

enable_pool_hba = on
pool_passwd = 'pool_passwd'
authentication_timeout = 60

# Allow clear text password in pool_passwd to work with SCRAM-SHA-256 backends
allow_clear_text_frontend_auth = on
